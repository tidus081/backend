This is a folder for Flaskserver.

The server is running on EC2 in AWS.
app.py is a Flask script to communicate with other applications
such as Google sheet and Postgre Script.

-----------Instruction for servicing Flask with Nginx on AWS----------------------
Here is the link and I attached PDF file
https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uswgi-and-nginx-on-ubuntu-18-04
sudo systemctl restart nginx

-----------Instruction for servicing Flask with Apache on AWS----------------------
1. Install the apache webserver, mod_wsgi, pip tool and virtualenv.
# be careful, we need python3 modules
sudo apt-get update
sudo apt-get install apache2 libapache2-mod-wsgi-py3
sudo apt-get install libapache2-mod-wsgi-py3
sudo apt-get install python3-pip
sudo pip3 install virtualenv

2. Create a directory for our Flask app.
mkdir ~/flask
sudo ln -sT ~/flask /var/www/html/flask # if it doesnt work

-to verify our operation is working
cd ~/flask
sudo ln -s /var/www/html/flask # use it

echo "Hello World" > index.html

3. create virtual environment
virtualenv -p python3 venv
. venv/bin/activate
install all libraries such as flask, numpy, pandas and so on.
pip3 install psycopg2-binary
python3 -m pip install grpcio
python3 -m pip install grpcio-tools googleapis-common-protos
pip3 install pandas
pip3 install flask
deactivate
chmod 777 /var/www/html/flask

4. Create an flask app and .wsgi file to load the app.
----vi app.py
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
	return 'Hello, World!'

if __name__ == "__main__":
    app.run()


-----vi app.wsgi
activate_this = '/home/ubuntu/flask/venv/bin/activate_this.py'
with open(activate_this) as f:
	exec(f.read(), dict(__file__=activate_this))

import sys
import logging

logging.basicConfig(stream=sys.stderr)
sys.path.insert(0,"/var/www/html/flask/")

from app import app as application

5. Enable mod_wsgi and add dependency in .conf.
sudo vi /etc/apache2/sites-enabled/000-default.conf
-add the following block just after the DocumentRoot /var/www/html line

WSGIDaemonProcess flask threads=5
WSGIScriptAlias / /var/www/html/flask/app.wsgi
        <Directory flask>
                WSGIProcessGroup flask
                WSGIApplicationGroup %{GLOBAL}
                Order deny,allow
                Allow from all
        </Directory>


6. Restart the web server.
sudo apt-get update && sudo apt-get upgrade -y
sudo apachectl restart

7. check error
cd /var/log/apache2
vi error.log
. venv/bin/activate

make instances
might use docker for service
load balancer

/etc.d
gRPC
